# -*- coding: utf-8 -*-
"""zeotap_dhanush_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rfm6iFIFvEseF17RVUJltmFFlWvy1NwV
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Task 1: Exploratory Data Analysis (EDA) and Business Insights

"""

import pandas as pd

# Load the datasets
customers_df = pd.read_csv('/content/Customers.csv')
products_df = pd.read_csv('/content/Products.csv')
transactions_df = pd.read_csv('/content/Transactions.csv')

# Check the first few rows of each dataset
print(customers_df.head())
print(products_df.head())
print(transactions_df.head())

# Check for missing values
print(customers_df.isnull().sum())
print(products_df.isnull().sum())
print(transactions_df.isnull().sum())

# Check data types
print(customers_df.info())

print(products_df.info())

print(transactions_df.info())

""" Merge DataFrames for Comprehensive Analysis

"""

# Merge transactions with customers and products
merged_df = transactions_df.merge(customers_df, on='CustomerID', how='left')
merged_df = merged_df.merge(products_df, on='ProductID', how='left')

"""Analyze Customer Demographics


"""

# Distribution of customers by region
region_distribution = customers_df['Region'].value_counts()
print(region_distribution)

# Plot the distribution of customers by region
plt.figure(figsize=(8, 6))
sns.barplot(x=region_distribution.index, y=region_distribution.values)
plt.title('Customer Distribution by Region')
plt.xlabel('Region')
plt.ylabel('Number of Customers')
plt.show()

"""Analyze Product Sales

"""

# Top 10 products by total sales
top_products = merged_df.groupby('ProductName')['TotalValue'].sum().nlargest(10)
print(top_products)

# Plot the top 10 products by total sales
plt.figure(figsize=(10, 6))
sns.barplot(x=top_products.values, y=top_products.index)
plt.title('Top 10 Products by Total Sales')
plt.xlabel('Total Sales (USD)')
plt.ylabel('Product Name')
plt.show()

"""Analyze Transaction Patterns"""

# Total transactions over time
merged_df['TransactionDate'] = pd.to_datetime(merged_df['TransactionDate'])
merged_df['TransactionMonth'] = merged_df['TransactionDate'].dt.to_period('M')
monthly_transactions = merged_df.groupby('TransactionMonth')['TransactionID'].count()
print(monthly_transactions)

# Plot the total transactions over time
plt.figure(figsize=(10, 6))
monthly_transactions.plot(kind='line')
plt.title('Total Transactions Over Time')
plt.xlabel('Month')
plt.ylabel('Number of Transactions')
plt.show()

# Average transaction value over time
monthly_avg_transaction_value = merged_df.groupby('TransactionMonth')['TotalValue'].mean()
print(monthly_avg_transaction_value)

# Plot the average transaction value over time
plt.figure(figsize=(10, 6))
monthly_avg_transaction_value.plot(kind='line')
plt.title('Average Transaction Value Over Time')
plt.xlabel('Month')
plt.ylabel('Average Transaction Value (USD)')
plt.show()

"""Customer Lifetime Value (CLV) by Region"""

# Calculate average transaction value by region
avg_transaction_by_region = merged_df.groupby('Region')['TotalValue'].mean().sort_values(ascending=False)
print(avg_transaction_by_region)

# Plot the average transaction value by region
plt.figure(figsize=(8, 6))
sns.barplot(x=avg_transaction_by_region.index, y=avg_transaction_by_region.values)
plt.title('Average Transaction Value by Region')
plt.xlabel('Region')
plt.ylabel('Average Transaction Value (USD)')
plt.show()

"""Seasonal Trends in Product Sales"""

# Calculate monthly sales by product category
monthly_sales_by_category = merged_df.groupby(['TransactionMonth', 'Category'])['TotalValue'].sum().unstack()
print(monthly_sales_by_category)
# Plot monthly sales by product category
plt.figure(figsize=(12, 6))
monthly_sales_by_category.plot(kind='line')
plt.title('Monthly Sales by Product Category')
plt.xlabel('Month')
plt.ylabel('Total Sales (USD)')
plt.legend(title='Category')
plt.show()

"""Sales by Product Category"""

# Sales by product category
category_sales = merged_df.groupby('Category')['TotalValue'].sum().sort_values(ascending=False)
print(category_sales)

# Plot
plt.figure(figsize=(8, 6))
sns.barplot(x=category_sales.index, y=category_sales.values, palette='plasma')
plt.title('Total Sales by Product Category')
plt.xlabel('Category')
plt.ylabel('Total Sales (USD)')
plt.show()

""" Monthly Transaction Trends"""

# Monthly transaction count
monthly_transactions = merged_df.groupby('TransactionMonth')['TransactionID'].count()
print(monthly_transactions)
# Plot
plt.figure(figsize=(10, 6))
monthly_transactions.plot(kind='line', marker='o')
plt.title('Monthly Transaction Trends')
plt.xlabel('Month')
plt.ylabel('Number of Transactions')
plt.show()